apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    app.openshift.io/vcs-ref: ""
    app.openshift.io/vcs-uri: https://github.com/joelapatatechaude/python-hello-world
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"python-hello-world:latest","namespace":"multi-apps"},"fieldPath":"spec.template.spec.containers[?(@.name==\"python-hello-world\")].image","pause":"false"}]'
    isFromDevfile: "true"
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: python-hello-world
    app.kubernetes.io/component: python-hello-world
    app.kubernetes.io/instance: python-hello-world
    app.kubernetes.io/name: python-hello-world
    app.kubernetes.io/part-of: python-hello-world-app
    app.openshift.io/runtime: python
  name: python-hello-world
  namespace: multi-apps
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: python-hello-world
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: python-hello-world
        deployment: python-hello-world
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/multi-apps/python-hello-world:latest
        imagePullPolicy: Always
        name: python-hello-world
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
