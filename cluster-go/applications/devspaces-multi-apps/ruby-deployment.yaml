apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    app.openshift.io/vcs-ref: devfile
    app.openshift.io/vcs-uri: https://github.com/joelapatatechaude/rails-blog.git
    deployment.kubernetes.io/revision: "1"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"rails-blog:latest","namespace":"multi-apps"},"fieldPath":"spec.template.spec.containers[?(@.name==\"rails-blog\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: rails-blog
    app.kubernetes.io/component: rails-blog
    app.kubernetes.io/instance: rails-blog
    app.kubernetes.io/name: rails-blog
    app.kubernetes.io/part-of: rails-blog-app
    app.openshift.io/runtime: ruby
    app.openshift.io/runtime-version: 3.0-ubi7
  name: rails-blog
  namespace: multi-apps
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rails-blog
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: rails-blog
        deployment: rails-blog
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/applications11/rails-blog:latest
        imagePullPolicy: Always
        name: rails-blog
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
